import groovy.json.JsonSlurper
import groovy.json.JsonOutput

plugins {
    id 'fabric-loom' version '0.7-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version =  project.mc_version + '-' + project.mod_version
group = project.maven_group

repositories {
    mavenCentral()

    maven {
        url = "https://maven.shedaniel.me/"
    }
    maven { url = 'https://maven.fabricmc.net/' }
    maven { url = 'https://maven.terraformersmc.com/releases/' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.mc_version}"
    mappings "net.fabricmc:yarn:${project.mc_version}+build.${project.yarn_build}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}+${project.mc_major_version}"

    modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"

    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api:${project.rei_version}"
    //modRuntime "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
        duplicatesStrategy "warn"
    }

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand ( "version": project.version, "loader_version": project.loader_min_version, "mc_mversion": project.mc_major_version )
        duplicatesStrategy "warn"
    }

    doLast {
        final long jsonMinifyStart = System.currentTimeMillis()
        long jsonMinified = 0
        long jsonBytesSaved = 0

        fileTree(dir: outputs.files.asPath, include: '**/*.json').each {
            final File file = it
            jsonMinified++
            final long oldLength = file.length()
            file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
            jsonBytesSaved += oldLength - file.length()
        }

        println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // mavenLocal()
    }
}
